services:
    # Prisma AIRS MCP Server
    prisma-airs-mcp:
        image: ghcr.io/cdot65/prisma-airs-mcp:dev
        container_name: prisma-airs-mcp
        ports:
            - "3000:3000"
        environment:
            - NODE_ENV=development
            - PORT=3000
            - LOG_LEVEL=debug
            # AIRS Configuration (override with .env file)
            - AIRS_API_URL=${AIRS_API_URL:-https://api.prisma-airs-test.example.com}
            - AIRS_API_KEY=${AIRS_API_KEY}
            # Optional configurations
            - CACHE_ENABLED=${CACHE_ENABLED:-true}
            - CACHE_TTL_SECONDS=${CACHE_TTL_SECONDS:-300}
            - CACHE_MAX_SIZE=${CACHE_MAX_SIZE:-1000}
            - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-true}
            - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
            - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-60000}
        env_file:
            - .env
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); });",
                ]
            interval: 30s
            timeout: 3s
            retries: 3
            start_period: 10s
        restart: unless-stopped
        # Resource limits (adjust based on requirements)
        deploy:
            resources:
                limits:
                    cpus: "1"
                    memory: 512M
                reservations:
                    cpus: "0.25"
                    memory: 128M
