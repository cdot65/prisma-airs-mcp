{
    "name": "prisma-airs-mcp",
    "version": "1.0.0",
    "description": "HTTP-based Model Context Protocol server for Palo Alto Networks Prisma AIRS integration",
    "main": "dist/index.js",
    "scripts": {
        "dev": "nodemon --exec tsx src/index.ts",
        "build": "tsc",
        "start": "node dist/index.js",
        "test": "jest",
        "test:unit": "jest --testPathPattern=tests/unit",
        "test:integration": "jest --testPathPattern=tests/integration",
        "test:watch": "jest --watch",
        "test:coverage": "jest --coverage",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix",
        "format": "prettier --write \"**/*.{ts,json,md,yml,yaml}\"",
        "format:check": "prettier --check \"**/*.{ts,json,md,yml,yaml}\"",
        "format:src": "prettier --write \"src/**/*.{ts,json,md}\"",
        "format:src:check": "prettier --check \"src/**/*.{ts,json,md}\"",
        "typecheck": "tsc --noEmit",
        "validate": "pnpm run typecheck && pnpm run lint && pnpm run format:check && pnpm test",
        "clean": "rm -rf dist coverage .tsbuildinfo",
        "comment:docker": "=== Docker Build Commands ===",
        "docker:build:local": "./scripts/docker-build.sh",
        "docker:build:arm": "./scripts/docker-build.sh --platforms linux/arm64",
        "docker:build:amd64": "./scripts/docker-build.sh --platforms linux/amd64",
        "docker:build:dev": "./scripts/docker-build.sh --tag dev",
        "docker:build:dev:multi": "./scripts/docker-build.sh --multi-platform --tag dev --push",
        "docker:build:prod": "./scripts/docker-build-k8s.sh --platforms linux/amd64 --load",
        "comment:docker:runtime": "=== Docker Runtime Commands ===",
        "docker:run": "./scripts/docker-run.sh",
        "docker:run:dev": "./scripts/docker-run.sh --tag dev",
        "docker:dev": "pnpm run docker:build:dev && pnpm run docker:run:dev:3100",
        "docker:run:dev:3100": "./scripts/docker-run.sh --tag dev --port 3100",
        "docker:stop": "docker stop prisma-airs-mcp",
        "docker:logs": "docker logs -f prisma-airs-mcp",
        "docker:compose:up:dev": "docker compose --profile dev up -d",
        "docker:compose:up:prod": "docker compose --profile prod up -d",
        "docker:compose:down": "docker compose --profile dev --profile prod down",
        "docker:compose:logs": "docker compose logs -f",
        "docker:compose:logs:dev": "docker compose logs -f dev",
        "docker:compose:logs:prod": "docker compose logs -f prod",
        "comment:docker:publish": "=== Docker Publish Commands ===",
        "docker:publish:dev": "./scripts/docker-publish.sh --tag dev",
        "docker:publish:prod": "./scripts/docker-publish.sh",
        "docker:publish:version": "./scripts/docker-publish.sh --version",
        "k8s:deploy:dev": "./k8s/scripts/deploy.sh deploy development",
        "k8s:deploy:staging": "./k8s/scripts/deploy.sh deploy staging",
        "k8s:deploy:prod": "./k8s/scripts/deploy.sh deploy production",
        "k8s:status": "./k8s/scripts/deploy.sh status prisma-airs-mcp-server",
        "k8s:rollout:status": "kubectl rollout status deployment/prisma-airs-mcp -n prisma-airs-mcp-server",
        "k8s:rollout:restart": "kubectl rollout restart deployment/prisma-airs-mcp -n prisma-airs-mcp-server",
        "k8s:rollback": "./scripts/rollback.sh",
        "comment:deploy": "=== Deployment Commands ===",
        "deploy:validate": "pnpm run lint:fix && pnpm run format && pnpm run typecheck && pnpm run build",
        "deploy:dev": "pnpm run docker:build:dev && pnpm run docker:publish:dev && pnpm run k8s:deploy:dev",
        "deploy:staging": "pnpm run docker:build:prod && pnpm run docker:publish:prod && pnpm run k8s:deploy:staging",
        "deploy:prod": "pnpm run deploy:validate && pnpm run docker:build:prod && pnpm run docker:publish:prod && pnpm run k8s:deploy:prod && pnpm run k8s:rollout:status",
        "deploy:prod:version": "./scripts/deploy-production.sh",
        "deploy:quick": "./scripts/deploy-quick.sh",
        "deploy:quick:dev": "./scripts/deploy-quick.sh development",
        "deploy:quick:staging": "./scripts/deploy-quick.sh staging",
        "comment:version": "=== Version Management Commands ===",
        "version:sync": "./scripts/sync-version.sh",
        "version:bump": "./scripts/bump-version.sh",
        "version:patch": "./scripts/bump-version.sh patch",
        "version:minor": "./scripts/bump-version.sh minor",
        "version:major": "./scripts/bump-version.sh major",
        "docker:build": "./scripts/docker-build-version.sh",
        "docker:push": "./scripts/docker-build-version.sh --push"
    },
    "keywords": [
        "mcp",
        "prisma",
        "airs",
        "security",
        "ai"
    ],
    "author": "cdot65",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/cdot65/prisma-airs-mcp.git"
    },
    "bugs": {
        "url": "https://github.com/cdot65/prisma-airs-mcp/issues"
    },
    "homepage": "https://github.com/cdot65/prisma-airs-mcp#readme",
    "packageManager": "pnpm@10.6.5",
    "devDependencies": {
        "@jest/globals": "^30.0.4",
        "@types/cors": "^2.8.19",
        "@types/eventsource": "^3.0.0",
        "@types/express": "^5.0.3",
        "@types/jest": "^30.0.0",
        "@types/node": "^24.0.13",
        "@types/node-fetch": "^2.6.12",
        "@types/uuid": "^10.0.0",
        "@typescript-eslint/eslint-plugin": "^8.37.0",
        "@typescript-eslint/parser": "^8.37.0",
        "eslint": "^9.31.0",
        "eslint-config-prettier": "^10.1.5",
        "eslint-import-resolver-typescript": "^4.4.4",
        "eslint-plugin-import": "^2.32.0",
        "eslint-plugin-promise": "^7.2.1",
        "eslint-plugin-security": "^3.0.1",
        "eslint-plugin-sonarjs": "^3.0.4",
        "eventsource": "^4.0.0",
        "jest": "^30.0.4",
        "node-fetch": "^2.7.0",
        "nodemon": "^3.1.10",
        "prettier": "^3.6.2",
        "ts-jest": "^29.4.0",
        "tsx": "^4.20.3",
        "typescript": "^5.8.3"
    },
    "dependencies": {
        "@modelcontextprotocol/sdk": "^1.15.1",
        "cors": "^2.8.5",
        "dotenv": "^17.2.0",
        "express": "^5.1.0",
        "uuid": "^11.1.0",
        "winston": "^3.17.0",
        "zod": "^4.0.5"
    }
}
